DROP TABLE IF EXISTS "public"."payment_history";
CREATE TABLE "public"."payment_history" (
  "id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY (
INCREMENT 1
MINVALUE  1
MAXVALUE 9223372036854775807
START 1
CACHE 1
),
  "created_at" timestamptz(6) DEFAULT now(),
  "user_id" uuid NOT NULL,
  "status" varchar COLLATE "pg_catalog"."default",
  "subscription_id" varchar COLLATE "pg_catalog"."default",
  "subscription_payment_id" varchar COLLATE "pg_catalog"."default",
  "subscription_plan_id" varchar COLLATE "pg_catalog"."default",
  "currency" varchar COLLATE "pg_catalog"."default",
  "amount" varchar COLLATE "pg_catalog"."default",
  "amount_tax" varchar COLLATE "pg_catalog"."default",
  "paddle_fee" varchar COLLATE "pg_catalog"."default",
  "payment_method" varchar COLLATE "pg_catalog"."default",
  "receipt_url" varchar COLLATE "pg_catalog"."default",
  "attempt_number" varchar COLLATE "pg_catalog"."default",
  "next_retry_date" varchar COLLATE "pg_catalog"."default",
  "refund_reason" varchar COLLATE "pg_catalog"."default",
  "refund_type" varchar COLLATE "pg_catalog"."default",
  "customer_name" varchar COLLATE "pg_catalog"."default",
  "user_country" varchar COLLATE "pg_catalog"."default"
)
;
ALTER TABLE "public"."payment_history" OWNER TO "postgres";
COMMENT ON TABLE "public"."payment_history" IS '付费历史记录';

-- ----------------------------
-- Primary Key structure for table payment_history
-- ----------------------------
ALTER TABLE "public"."payment_history" ADD CONSTRAINT "payment_history_pkey" PRIMARY KEY ("id");

-- ----------------------------
-- Foreign Keys structure for table payment_history
-- ----------------------------
ALTER TABLE "public"."payment_history" ADD CONSTRAINT "payment_history_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION;

alter table payment_history enable row level security;
create policy "Can only view own subs data." on payment_history for select using (auth.uid() = user_id);


DROP TABLE IF EXISTS "public"."user_payment_data";
CREATE TABLE "public"."user_payment_data" (
  "id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY (
INCREMENT 1
MINVALUE  1
MAXVALUE 9223372036854775807
START 1
CACHE 1
),
  "created_at" timestamptz(6) DEFAULT now(),
  "user_id" uuid NOT NULL,
  "subscription_id" varchar COLLATE "pg_catalog"."default",
  "subscription_plan_id" varchar COLLATE "pg_catalog"."default",
  "subscription_end_date" date,
  "subscription_status" varchar COLLATE "pg_catalog"."default",
  "subscription_update_url" varchar COLLATE "pg_catalog"."default",
  "subscription_cancel_url" varchar COLLATE "pg_catalog"."default"
)
;
ALTER TABLE "public"."user_payment_data" OWNER TO "postgres";
COMMENT ON TABLE "public"."user_payment_data" IS '用户付费数据';

-- ----------------------------
-- Primary Key structure for table user_payment_data
-- ----------------------------
ALTER TABLE "public"."user_payment_data" ADD CONSTRAINT "user_payment_data_pkey" PRIMARY KEY ("id");

-- ----------------------------
-- Foreign Keys structure for table user_payment_data
-- ----------------------------
ALTER TABLE "public"."user_payment_data" ADD CONSTRAINT "user_payment_data_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION;

alter table user_payment_data enable row level security;
create policy "Can only view own subs data." on user_payment_data for select using (auth.uid() = user_id);

